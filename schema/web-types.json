{
  "$schema": "http://json.schemastore.org/web-types",
  "framework": "vue",
  "name": "@tomoeed/vue-dialog",
  "version": "2.0.0",
  "js-types-syntax": "typescript",
  "description-markup": "markdown",
  "framework-config": {
    "enable-when": {
      "node-packages": [
        "vue",
        "@vue/cli"
      ],
      "file-extensions": [
        "vue"
      ],
      "ide-libraries": [
        "vue"
      ]
    }
  },
  "contributions": {
    "html": {
      "vue-components": [
        {
          "name": "Container",
          "description": "如果对话框只是用来展示一简单的些信息, 则可以配合该组件使用",
          "props": [
            {
              "name": "default-open",
              "type": "boolean",
              "default": "false",
              "description": "对话框默认是否打开"
            }
          ],
          "slots": [
            { "name": "default" }
          ]
        },
        {
          "name": "Dialog",
          "props": [
            {
              "name": "modelValue",
              "type": "boolean",
              "required": true
            },
            {
              "name": "role",
              "type": [
                "\"dialog\"",
                "\"alertdialog\""
              ],
              "required": false,
              "default": "\"dialog\""
            },
            {
              "name": "modal",
              "description": "是否显示为模态对话框<br>模态对话框默认不能通过点击 backdrop 区域关闭对话框. 如果需要该行为, 则需要明确传递 `backdropDismissible` 参数<br>`alertdialog` 默认是模态对话框, 并且不能通过点击 backdrop 区域关闭对话框",
              "type": "boolean | { backdropDismissible: boolean; }"
            },
            {
              "name": "keyboard-dismissible",
              "description": "键盘 Escape 按键是否可以关闭对话框",
              "type": "boolean",
              "default": "true"
            },
            {
              "name": "draggable",
              "description": "对话框是否可拖动<br>对话框被拖动后再次打开默认不会重置定位, 如果需要该行为, 则需要明确传递 `relocation` 参数",
              "type": "boolean | { relocation?: boolean; }",
              "default": "false"
            },
            {
              "name": "retain-focus",
              "description": "对话框关闭后是否保留此次最后聚焦的元素的焦点, 当再次打开对话框时聚焦到此元素",
              "type": "boolean",
              "default": "false"
            },
            {
              "name": "scroll-lock",
              "description": "对话框开启时, 是否锁定屏幕滚动",
              "type": "boolean",
              "default": "true"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          },
          "js": {
            "events": [
              {
                "name": "update:modelValue",
                "type": "(value: boolean) => void"
              }
            ]
          },
          "slots": [
            {
              "name": "default",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ ref: (node: Element | ComponentPublicInstance | null) => void }"
                }
              ]
            }
          ]
        },
        {
          "name": "Header",
          "props": [
            {
              "name": "dismissible",
              "description": "是否显示关闭对话框按钮<br>你应该总是为对话框在底部提供一个按钮用来关闭对话框",
              "type": "boolean",
              "default": "false"
            }
          ],
          "slots": [
            { "name": "default" },
            {
              "name": "subtitle",
              "description": "标题栏副标题"
            }
          ]
        },
        {
          "name": "Body",
          "slots": [
            { "name": "default" },
            {
              "name": "as",
              "description": "自定义渲染内容, e.g. `<Body #as=\"asProps\"><form v-bind=\"asProps\">...</form></Body>`",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "object"
                }
              ]
            }
          ]
        },
        {
          "name": "Footer",
          "slots": [
            { "name": "default" }
          ]
        }
      ]
    }
  }
}
